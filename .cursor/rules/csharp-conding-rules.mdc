---
description: 
globs: *.cs
alwaysApply: false
---
# C# コーディングガイドライン

## 開発環境
- Visual Studio 2022 の最新版を常に使用
- global using を有効化しているので、不要な using は追加しない

## 命名規則

### 一般的なルール
- パスカルケース（PascalCase）：クラス、メソッド、プロパティ、定数
- キャメルケース（camelCase）：ローカル変数、パラメータ
- アンダースコア（_）：privateフィールド
- sアンダースコア（s_）：private staticフィールド
- 大文字：構造体のpublicフィールド、recordのプライマリコンストラクタのパラメータ
- this を省略しない
- static フィールド、プロパティの場合 ClassName を省略しない(static class 内の場合は省略する)

### 命名の詳細ルール
- メソッド名は動詞句とする
- 論理値を表す名前は`is-`、`has-`、`can-`をつける
- 二重否定は避ける
- コレクションやリストの変数名は複数形とする
- 名前空間とクラス名の重複は避ける
- 列挙体のビットフィールドは複数形とする
- 定数は大文字から始める
- コントロール名は大文字から始める

## コーディング・レイアウト規則
- インデントはスペースを使用（4スペース）
- ファイルの末尾に空行を入れる
- 最後の要素にもカンマを付ける
- メソッドの長さは1画面に収まる程度にする
- 長い行は改行する
- メソッドチェーンは各メソッドの前で改行
- 演算子は行末に配置
- ifの中括弧の省略はしない
- 自動実装プロパティは1行にする
- 空のコンストラクタは1行にする
- `var`は積極的に使用
- `Dictionary<TKey, TValue>`は型パラメータのコメントを残す

## コメント規則
- 複数行コメントは使用しない
- 行末コメントは使用しない
- コードの内容を繰り返す行コメントは書かない
- 変更履歴のコメントは書かない
- ドキュメンテーションコメントは必須

## プラクティス＆イディオム
- ファイルスコープnamespaceを使用
- ローカル変数の使いまわしはしない
- ローカル変数のスコープは小さくする
- マジックナンバーは使用しない
- インクリメントは別の行にする
- 三項演算子を積極的に使用
- switch式を使用
- unsigned型は使用しない
- constと列挙体はコンパイル時定数として使用
- Null許容参照型を適切に使用
- LINQのNullable解除にはOfTypeを使用

## 参考元
https://qiita.com/Ted-HM/items/1d4ecdc2a252fe745871.md

